# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "dioxus-desktop"
version = "0.6.3"
authors = ["Jonathan Kelley"]
build = "build.rs"
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "WebView renderer for Dioxus"
homepage = "https://dioxuslabs.com/learn/0.6/getting_started"
readme = "README.md"
keywords = [
    "dom",
    "ui",
    "gui",
    "react",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/DioxusLabs/dioxus/"

[package.metadata.docs.rs]
cargo-args = [
    "-Zunstable-options",
    "-Zrustdoc-scrape-examples",
]
default-features = false
features = [
    "tokio_runtime",
    "devtools",
]
rustc-args = [
    "--cfg",
    "docsrs",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "x86_64-unknown-linux-gnu",
    "x86_64-pc-windows-msvc",
    "aarch64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-linux-android",
    "armv7-linux-androideabi",
]

[lib]
name = "dioxus_desktop"
path = "src/lib.rs"

[[test]]
name = "check_eval"
path = "headless_tests/eval.rs"
harness = false

[[test]]
name = "check_events"
path = "headless_tests/events.rs"
harness = false

[[test]]
name = "check_rendering"
path = "headless_tests/rendering.rs"
harness = false

[dependencies.async-trait]
version = "0.1.68"

[dependencies.base64]
version = "0.22.1"

[dependencies.dioxus-cli-config]
version = "0.6.2"

[dependencies.dioxus-core]
version = "0.6.2"
features = ["serialize"]

[dependencies.dioxus-devtools]
version = "0.6.2"
optional = true

[dependencies.dioxus-document]
version = "0.6.2"
default-features = false

[dependencies.dioxus-history]
version = "0.6.2"
default-features = false

[dependencies.dioxus-hooks]
version = "0.6.2"

[dependencies.dioxus-html]
version = "0.6.2"
features = [
    "serialize",
    "mounted",
    "file_engine",
]
default-features = false

[dependencies.dioxus-interpreter-js]
version = "0.6.2"
features = [
    "binary-protocol",
    "serialize",
]

[dependencies.dioxus-signals]
version = "0.6.2"
optional = true

[dependencies.dunce]
version = "1.0.5"

[dependencies.futures-channel]
version = "0.3.31"

[dependencies.futures-util]
version = "0.3"
default-features = false

[dependencies.generational-box]
version = "0.6.2"

[dependencies.infer]
version = "0.11.0"

[dependencies.once_cell]
version = "1.17.1"

[dependencies.rustc-hash]
version = "1.1.0"

[dependencies.serde]
version = "1.0.136"

[dependencies.serde_json]
version = "1.0.79"

[dependencies.slab]
version = "0.4.2"

[dependencies.tao]
version = "0.30.8"
features = [
    "rwh_05",
    "rwh_05",
]

[dependencies.thiserror]
version = "1.0.40"

[dependencies.tokio]
version = "1.40"
features = [
    "sync",
    "rt-multi-thread",
    "rt",
    "time",
    "macros",
    "fs",
    "io-util",
]
optional = true

[dependencies.tracing]
version = "0.1.37"

[dependencies.urlencoding]
version = "2.1.2"

[dependencies.webbrowser]
version = "0.8.0"

[dependencies.wry]
version = "0.45.0"
features = [
    "os-webview",
    "protocol",
    "drag-drop",
]
default-features = false

[build-dependencies.lazy-js-bundle]
version = "0.6.2"

[features]
default = [
    "tokio_runtime",
    "exception",
    "transparent",
    "devtools",
]
devtools = [
    "wry/devtools",
    "dep:dioxus-devtools",
    "dioxus-signals",
]
exception = ["wry/objc-exception"]
fullscreen = ["wry/fullscreen"]
gnu = []
tokio_runtime = ["dep:tokio"]
transparent = ["wry/transparent"]

[target.'cfg(any(target_os = "windows",target_os = "macos",target_os = "linux"))'.dependencies.tray-icon]
version = "0.19"

[target.'cfg(any(target_os = "windows",target_os = "macos",target_os = "linux",target_os = "dragonfly", target_os = "freebsd", target_os = "netbsd", target_os = "openbsd"))'.dependencies.global-hotkey]
version = "0.5.0"

[target.'cfg(any(target_os = "windows",target_os = "macos",target_os = "linux",target_os = "dragonfly", target_os = "freebsd", target_os = "netbsd", target_os = "openbsd"))'.dependencies.muda]
version = "0.11.3"

[target.'cfg(any(target_os = "windows",target_os = "macos",target_os = "linux",target_os = "dragonfly", target_os = "freebsd", target_os = "netbsd", target_os = "openbsd"))'.dependencies.rfd]
version = "0.14"
features = [
    "xdg-portal",
    "tokio",
]
default-features = false

[target.'cfg(not(target_os = "android"))'.dependencies.tokio-tungstenite]
version = "0.23.1"
features = ["native-tls"]
optional = true

[target.'cfg(target_os = "android")'.dependencies.jni]
version = "0.21.1"

[target.'cfg(target_os = "android")'.dependencies.ndk]
version = "0.9.0"

[target.'cfg(target_os = "android")'.dependencies.ndk-context]
version = "0.1.1"

[target.'cfg(target_os = "android")'.dependencies.ndk-sys]
version = "0.6.0"

[target.'cfg(target_os = "android")'.dependencies.tokio-tungstenite]
version = "0.23.1"
features = ["rustls"]
optional = true

[target.'cfg(target_os = "ios")'.dependencies.objc]
version = "0.2.7"

[target.'cfg(target_os = "ios")'.dependencies.objc_id]
version = "0.1.1"

[target.'cfg(target_os = "linux")'.dependencies.wry]
version = "0.45.0"
features = [
    "os-webview",
    "protocol",
    "drag-drop",
    "linux-body",
]
default-features = false

[target.'cfg(target_os = "macos")'.dependencies.cocoa]
version = "0.25"

[target.'cfg(target_os = "macos")'.dependencies.core-foundation]
version = "0.9.3"

[target.'cfg(target_os = "macos")'.dependencies.objc]
version = "0.2.7"

[target."cfg(unix)".dependencies.signal-hook]
version = "0.3.17"
